## Настройки tabun_feed и стандартных плагинов ##
# Все указанные в параметрах пути используются как есть относительно
# рабочего каталога (а не каталога, в котором находится конфиг)


## Основные настройки ##
[tabun_feed]

# Уровень логируемых сообщений: FATAL, ERROR, WARNING, INFO, DEBUG
# loglevel = INFO

# Формат логов
# logformat = [%(asctime)s] [%(levelname)s] %(message)s

# Путь к файлу с базой данных sqlite3
# db = tabun_feed.db

# Путь к каталогу с плагинами; добавляется в sys.path
# plugins_dir = plugins

# Список плагинов (через запятую), которые нужно загрузить;
# r:foo разворачивается в tabun_feed.readers.foo, а
# :foo - в tabun_feed.plugins.foo
# Плагины являются обычными модулями Python
# plugins = r:posts, r:comments, :mysql, my_cool_plugin
plugins = tabun_feed.readers.posts, :monitor

# Если 1, записывает сообщения об ошибках в базу данных
# (иногда удообнее чем логи)
# failures_to_db = 0

# Удалённое управление: сокет, на котором принимать содинения
# (если не указывать, удалённое управление будет недоступно)
# remote_bind = unix://tmp/tabun_feed.socket

# В случае, если это unix-сокет — права доступа к нему
# remote_unix_mode = 770

# Пароль для ограничения доступа к удалённому управлению
# remote_password = 123456

# Для плагина interpreter: отдельный пароль для получения
# доступа к интерактивной консоли Python
# remote_console_password = q1w2e3r4t5y6

# Если 1, используется gevent с monkey.patch_all()
# gevent_threads = 0

# Путь к текстовому файлу, в который будет записан PID процесса
# (удаляется после корректного выхода)
# pidfile = 

# Путь к текстовому файлу, в который будет записываться юникстайм
# последней активности главного потока (может обновляться часто)
# alivefile =

# Имя пользователя для авторизации (необязательной) на Табуне
# username = Random

# Пароль пользователя, указанного в предыдущем параметре
# password = 123456

# Ключик сессии, выдранный из cookies, для более быстрой и
# надёжной авторизации
# session_id = abcdef9876543210abcdef9876543210

# Ещё какой-то ключик, при наличии которого не разлогинивает
# key = abcdef9876543210abcdef9876543210

# Собственно сайт, с которым мы работаем
# http_host = https://tabun.everypony.ru

# Название cookie, в которую записывается ключик сессии
# session_cookie_name = TABUNSESSIONID

# Задержка между итерациями главной читалки
# iterations_interval = 10

# Минимальная задержка между запросами к Табуну
# query_interval = 1.5

# Таймаут сетевых операций по умолчанию
# timeout = 15

# Число попыток повторного скачивания страницы при слетевшей авторизации
# tries_if_unauthorized = 60

# Число попыток повторного скачивания страницы при ошибке сети или сервера
# tries_if_error = 10


## Настройка уведомлений по электронной почте ##
[email]

# Адрес, с которого будут отправляться письма по умолчанию
# from = tabun_feed@example.com

# Хост, на котором находится SMTP-сервер
# host = 127.0.0.1

# Порт SMTP-сервера
# port = 25

# Максимальное время ожидания отправки
# timeout = 3

# Почта, на которую отправлять уведомления от плагинов
# notify_to = admin@example.com

# Тема письма с уведомлением
# notify_subject = tabun_feed notify

# Адрес, с которого будут отправляться уведомления
# notify_from = 

# Почта, на которую отправлять сообщения об ошибках
# (только падения, logging.error не считается)
# errors_to = admin@example.com

# Тема письма с ошибкой
# errors_subject = tabun_feed error

# Адрес, с которого будут отправляться сообщения об ошибках
# errors_from =


## Настройки плагина-читалки tabun_feed.readers.posts ##
[posts]

# Ссылки, с которых забирать посты (через запятую).
# Чтобы включить пагинацию для ссылки, нужно указать максимальное
# число просматриваемых страниц в якоре (он же фрагмент, он же #).
# Можно указать #M:N (два числа через двоеточие), тогда бот скачает
# не меньше M страниц, даже если новых постов нет, и не больше N
# страниц, даже если новые посты не кончаются. 
# Если новые посты кончились, лишние страницы загружаться
# не будут. В данном примере будут загружаться /index/newall/,
# /index/newall/page2/, /index/newall/page3/ и /blog/news/.
# urls = /index/newall/#3, /blog/news/

# Если выставить в 1, то посты с катом будут докачиваться отдельно
# для получения полного текста поста (некоторые плагины, которым
# это нужно, могут включить эту настройку самостоятельно)
# request_full_posts = 0


## Настройки плагина-читалки tabun_feed.readers.comments ##
[comments]

# Ссылки, с которых забирать комменты; формат аналогичен posts
# urls = /comments/#5


## Настройки плагина tabun_feed.plugins.mysql ##
[mysql]

# Сам mysql в tabun_feed не используется, но может быть нужен
# сторонним плагинам.

# Общая настройка подключения.
# Формат для UNIX-сокета:
# unix://имя:пароль@/путь/к/mysqld.sock
# Формат для TCP-сокета:
# socket://имя:пароль@хост/
# url = socket://foo:123456@localhost/

# Имя пользователя. Игнорируется, если указан в url
# username = foo

# Пароль. Игнорируется, если указан в url
# password = 123456

# База данных по умолчанию
# database = foodb

# При 1 включает отправку SQL-запросов в logging.debug
# debug = 0


## Настройки плагина tabun_feed.plugins.vk ##
[vk]

# Токен для использования API Вконтакте
# access_token =

# Связь блогов Табуна с пабликами, через точку с запятой.
# Через _ указывается паблик по умолчанию. Формат:
#   блог1, блог2: owner_id, короткий_адрес; блог3: owner_id,
#   короткий_адрес; _: owner_id, короткий_адрес
# targets = _: -54262226, tabun_feed; fanart,sketch_drawing: -82721038, tabun_feed_gallery; comics: -82721362, tabun_feed_comics; stories,Poetry_blog: -82721444, tabun_feed_stories


## Настройки плагина tabun_feed.plugins.vk_online ##
[vk_online]

# Интервал между скачиванием списка участников пабликов в секундах.
# Паблики берутся из настройки targets плагина vk.
# query_interval = 300


# Сторонние плагины могут добавлять какие-нибудь свои настройки.
